version: 2.1

orbs:
  base: dialogue/base@1.9.1
  release: dialogue/release@2.1.7
  python: dialogue/python@2.12.1
  utils: dialogue/utils@3.2.6

workflows:
  ci:
    jobs:
      - python/pylama:
          name: pylama
          context: org-global-v2
      - python/isort:
          name: isort
          context: org-global-v2
      - python/black:
          name: black
          context: org-global-v2
      - test:
          context: org-global-v2
          matrix:
            parameters:
              sqlalchemy_version: ["1.3", "1.4"]
      - release/release:
          name: release
          requires:
            - pylama
            - black
            - isort
            - test
          context: org-global-v2
          filters:
            branches:
              only: master

  publish:
    jobs:
      - publish:
          name: publish
          context: org-global-v2
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

jobs:

  test:
    parameters:
      sqlalchemy_version:
        type: enum
        enum: ["1.4", "1.3"]
        description: |
          Specify which version of sqlalchemy to run the tests against
    executor: python-postgres
    working_directory: ~/project/.
    steps:
      - base/setup
      - python/setup
      - utils/with_cache:
          key: 'sqlalchemy<<parameters.sqlalchemy_version>>-{{ checksum "pyproject.toml" }}-{{ checksum "poetry.lock" }}'
          namespace: tox
          path: ~/project/.tox
          steps:
            - run:
                name: "install tox"
                command: |
                  poetry run pip install -U tox
            - run:
                name: "run tox using sqlalchemy <<parameters.sqlalchemy_version>>.*"
                command: |
                  poetry run tox -e sqlalchemy<<parameters.sqlalchemy_version>>
      - utils/send_coverage_to_codecov:
          codecov_flag: sqlalchemy<<parameters.sqlalchemy_version>>

  publish:
    docker:
    - image: cimg/python:3.9
      auth:
        username: $DOCKERHUB_USER
        password: $DOCKERHUB_ACCESS_TOKEN
    working_directory: ~/project/.
    steps:
      - base/setup
      - python/setup
      - run:
          name: "publish package on pypi"
          command: |
            poetry config http-basic.pypi $PYPI_USER $PYPI_PASSWORD
            poetry publish --build --no-interaction

executors:
  python-postgres:
    docker:
      - image: cimg/python:3.9
      - image: postgres:10.12
        name: postgres
        environment:
          POSTGRES_HOST_AUTH_METHOD: trust
