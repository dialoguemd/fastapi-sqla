version: 2.1

orbs:
  base: dialogue/base@1.9.1
  release: dialogue/release@2.1.7
  python: dialogue/python@2.12.1


workflows:
  ci:
    jobs:
      - python/pylama:
          name: pylama
          context: org-global-v2
      - python/isort:
          name: isort
          context: org-global-v2
      - python/black:
          name: black
          context: org-global-v2
      - test-sqlalchemy13:
          name: test-sqlalchemy13
          context: org-global-v2
      - test-sqlalchemy14:
          name: test-sqlalchemy14
          context: org-global-v2
      - python/test:
          name: test
          context: org-global-v2
          executor: python-postgres
      - release/release:
          name: release
          requires:
            - test
            - pylama
            - black
            - isort
            - test-sqlalchemy13
            - test-sqlalchemy14
          context: org-global-v2
          filters:
            branches:
              only: master

  publish:
    jobs:
      - publish:
          name: publish
          context: org-global-v2
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

jobs:

  test-sqlalchemy13:
    executor: python-postgres
    working_directory: ~/project/.
    steps:
      - base/setup
      - python/setup
      - python/install_deps
      - run:
          name: "run tests against sqlalchemy 1.3.*"
          command: |
            poetry run tox sqlalchemy13

  test-sqlalchemy14:
    executor: python-postgres
    working_directory: ~/project/.
    steps:
      - base/setup
      - python/setup
      - python/install_deps
      - run:
          name: "run tests against sqlalchemy 1.3.*"
          command: |
            poetry run tox sqlalchemy14

  publish:
    docker:
    - image: cimg/python:3.9
      auth:
        username: $DOCKERHUB_USER
        password: $DOCKERHUB_ACCESS_TOKEN
    working_directory: ~/project/.
    steps:
      - base/setup
      - python/setup
      - run:
          name: "publish package on pypi"
          command: |
            poetry config http-basic.pypi $PYPI_USER $PYPI_PASSWORD
            poetry publish --build --no-interaction

executors:
  python-postgres:
    docker:
      - image: cimg/python:3.9
      - image: postgres:10.12
        name: postgres
        environment:
          POSTGRES_HOST_AUTH_METHOD: trust
