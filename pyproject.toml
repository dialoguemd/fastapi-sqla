[tool.poetry]
name = "fastapi-sqla"
version = "2.3.5"
description = "SQLAlchemy extension for FastAPI with support for pagination, asyncio and pytest, ready for production."
authors = [
    "Hadrien David <hadrien.david@dialogue.co>",
    "Victor Repkow <victor.repkow@dialogue.co>",
]
license = "MIT"
readme = "README.md"
repository = "https://github.com/dialoguemd/fastapi-sqla"
keywords = ["FastAPI", "SQLAlchemy", "asyncio", "pytest", "alembic"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python",
    "Programming Language :: SQL",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.7"
fastapi = ">=0.61"
pydantic = "<2"
sqlalchemy = "<2"
structlog = ">=20"

alembic = { version = "^1.4.3", optional = true}
asgi_lifespan = { version = "^1.0.1", optional = true}
asyncpg = {version = "^0.25.0", optional = true}
black = { version = "^20.8b1", optional = true}
Faker = { version = "^4.5.0", optional = true}
httpx = { version = "^0.15.4", optional = true}
isort = { version = "^5.5.3", optional = true}
pdbpp = { version = "^0.10.2", optional = true}
psycopg2 = { version = "^2.8.6", optional = true}
pylama = { version = "^7.7.1", optional = true}
pytest = { version = "^6.0.2", optional = true}
pytest-asyncio = { version = "^0.14.0", optional = true}
pytest-cov = { version = "^2.10.1", optional = true}
pytest-watch = { version = "^4.2.0", optional = true}
tox = { version = "^3.23.0", optional = true}
boto3 = { version = "^1.20.50", optional = true}

[tool.poetry.extras]
# Test dependencies as extras so they can be set as extras in tox config
# More info on https://github.com/python-poetry/poetry/issues/1941
tests = [
    "alembic",
    "asgi_lifespan",
    "black",
    "Faker",
    "httpx",
    "isort",
    "pdbpp",
    "psycopg2",
    "pylama",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-watch",
    "tox",
]
asyncpg = ["asyncpg"]
aws_rds_iam = ["boto3"]

[build-system]
requires = ["poetry>=1.1.15"]
build-backend = "poetry.masonry.api"

[tool.semantic_release]
version_variable = "pyproject.toml:version"
upload_to_pypi = false
commit_message = "Version generated by python-semantic-release [ci skip]"

[tool.poetry.plugins."pytest11"]
fastapi-sqla = "fastapi_sqla._pytest_plugin"

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = sqlalchemy{ 1.3, 1.4 }-{ asyncpg, noasyncpg }-{aws_rds_iam, noaws_rds_iam }

[testenv]
passenv = CI
deps =
    sqlalchemy1.3: sqlalchemy<1.4
    sqlalchemy1.4: sqlalchemy>=1.4,<2
    asyncpg: asyncpg
    aws_rds_iam: boto3
extras =
    tests
commands = pytest -vv --cov={envsitepackagesdir}/fastapi_sqla --cov-report xml --cov-report html --junitxml=test-reports/pytest/junit.xml
"""

[tool.black]
exclude = ".mypy_cache|.pytest_cache|.vscode|.eggs|venv"
--skip-magic-trailing-comma = true
