[tool.poetry]
name = "fastapi-sqla"
version = "2.8.2"
description = "SQLAlchemy extension for FastAPI with support for pagination, asyncio, and pytest, ready for production."
authors = [
    "Hadrien David <hadrien.david@dialogue.co>",
    "Victor Repkow <victor.repkow@dialogue.co>",
]
license = "MIT"
readme = "README.md"
repository = "https://github.com/dialoguemd/fastapi-sqla"
keywords = ["FastAPI", "SQLAlchemy", "asyncio", "pytest", "alembic"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python",
    "Programming Language :: SQL",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.7"
fastapi = ">=0.61"
pydantic = "<2"
sqlalchemy = ">=1.3"
structlog = ">=20"

alembic = { version = "^1.4.3", optional = true}
asgi_lifespan = { version = "^1.0.1", optional = true}
asyncpg = {version = "^0.25.0", optional = true}
black = {version = "^22.8.0", optional = true}
Faker = {version = "^14.2.0", optional = true}
httpx = {version = "^0.23.0", optional = true}
isort = { version = "^5.5.3", optional = true}
pdbpp = { version = "^0.10.2", optional = true}
psycopg2 = { version = "^2.8.6", optional = true}
pylama = {version = "^8.4.1", optional = true}
pytest = {version = "^7.2.1", optional = true}
pytest-asyncio = {version = "^0.19.0", optional = true}
pytest-cov = { version = "^2.10.1", optional = true}
tox = {version = "^3.26.0", optional = true}
boto3 = {version = "^1.24.74", optional = true}
greenlet = {version = "^1.1.3", optional = true}
mypy = {version = "^0.991", extras = ["tests"]}

[tool.poetry.extras]
# Test dependencies as extras so they can be set as extras in tox config
# More info on https://github.com/python-poetry/poetry/issues/1941
tests = [
    "alembic",
    "asgi_lifespan",
    "black",
    "coverage",
    "Faker",
    "greenlet",
    "httpx",
    "isort",
    "mypy",
    "pdbpp",
    "psycopg2",
    "pylama",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-watch",
    "tox",
]
asyncpg = ["asyncpg"]
aws_rds_iam = ["boto3"]

[build-system]
requires = ["poetry>=1.3.0"]
build-backend = "poetry.masonry.api"

[tool.semantic_release]
version_variable = "pyproject.toml:version"
upload_to_pypi = false
commit_message = "Version generated by python-semantic-release [ci skip]"

[tool.poetry.plugins."pytest11"]
fastapi-sqla = "fastapi_sqla._pytest_plugin"

[tool.pylama]
paths = "fastapi_sqla tests"
linters = "pycodestyle,mccabe,pyflakes"

[tool.pylama.linter.pycodestyle]
# https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#line-length
max_line_length = 88

[tool.isort]
profile = "black"
lines_between_sections = 1
multi_line_output = 3
include_trailing_comma = "True"
line_length = 88

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = "tests"
norecursedirs = ".git,.venv"
xfail_strict = "true"
addopts = """
    -p no:fastapi-sqla
    --cov-config pyproject.toml
    --cov-report term
    --cov-report term-missing
"""

# https://nedbatchelder.com/blog/201810/why_warnings_is_mysterious.html
filterwarnings = [
    "error:.*removed in version 2.0.*:",
]

[tool.pytest-watch.run]
ext = ".py, .yaml, .cfg"

[tool.coverage.run]
branch = true
omit = [
    "tests/*",
    ".venv/*"
]
concurrency = ["thread", "greenlet"]

[tool.coverage.report]
skip_covered = true

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = sqlalchemy{ 1.3, 1.4, 2.0 }-{ asyncpg, noasyncpg }-{aws_rds_iam, noaws_rds_iam }

[testenv]
passenv = CI
deps =
    sqlalchemy1.3: sqlalchemy<1.4
    sqlalchemy1.4: sqlalchemy>=1.4,<2
    sqlalchemy2.0: sqlalchemy>=2
    asyncpg: asyncpg
    aws_rds_iam: boto3
extras =
    tests
commands = pytest -vv --cov={envsitepackagesdir}/fastapi_sqla --cov-report xml --cov-report html --junitxml=test-reports/pytest/junit.xml
"""

[tool.black]
exclude = ".mypy_cache|.pytest_cache|.vscode|.eggs|venv"
--skip-magic-trailing-comma = true

[tool.mypy]
exclude = ["tests"]
ignore_missing_imports = true
plugins = "sqlalchemy.ext.mypy.plugin"
